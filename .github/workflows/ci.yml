name: ci
on:
  pull_request:
  push:
    branches:
    - master
  schedule:
  - cron: '00 01 * * *'

# principle of least privilege
# https://github.com/BurntSushi/jiff/blob/86bff5f10fd3bf24a8fc77b5199dc4f0ca4e2c88/.github/workflows/ci.yml#L10
permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - build: stable
          os: ubuntu-latest
          rust: stable
        - build: beta
          os: ubuntu-latest
          rust: beta
        - build: nightly
          os: ubuntu-latest
          rust: nightly
        - build: macos
          os: macos-latest
          rust: stable
        - build: win-msvc
          os: windows-latest
          rust: stable
        - build: linux-arm64
          os: ubuntu-24.04-arm
          rust: stable
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    # https://github.com/bevyengine/bevy_github_ci_template/blob/667143cd049befd33c05eb75d538248904625e2c/.github/workflows/ci.yaml#L34
    - name: Install Ubuntu dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends libasound2-dev libudev-dev

    - run: cargo test --locked --workspace --all-targets --profile ci --no-fail-fast --verbose
      if: matrix.build != 'win-msvc'
    - run: cargo test --locked --workspace --all-targets --profile ci --no-fail-fast --verbose -p awbrn-desktop --no-default-features && cargo test --locked --workspace --all-targets --profile ci --no-fail-fast --verbose --exclude awbrn-desktop
      if: matrix.build == 'win-msvc'

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - build: stable
          os: ubuntu-latest
          rust: stable
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    # https://github.com/bevyengine/bevy_github_ci_template/blob/667143cd049befd33c05eb75d538248904625e2c/.github/workflows/ci.yaml#L34
    - name: Install Ubuntu dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends libasound2-dev libudev-dev

    - run: cargo build --profile ci --locked --verbose -p awbrn-desktop

  # Check that all files are formatted properly.
  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt
    - name: Check formatting
      run: |
        cargo fmt --all -- --check

  testbench:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
    - name: Build benchmark
      run: |
        cargo bench --manifest-path crates/awbrn-map/bench/Cargo.toml -- --test

  web:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        targets: wasm32-unknown-unknown
    - uses: jdx/mise-action@v2
    - run: |
        cargo build --locked --profile ci --target wasm32-unknown-unknown --verbose -p awbrn-wasm
        wasm-bindgen --target web ./target/wasm32-unknown-unknown/ci/awbrn_wasm.wasm --out-dir ./web/src/wasm
    - name: Install web dependencies
      working-directory: web
      run: npm ci
    - name: Build web project
      working-directory: web
      run: npm run build
